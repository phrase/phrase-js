/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DistributionCreateParameters
 */
export interface DistributionCreateParameters {
    /**
     * Name of the distribution
     * @type {string}
     * @memberof DistributionCreateParameters
     */
    name?: string;
    /**
     * Project id the distribution should be assigned to.
     * @type {string}
     * @memberof DistributionCreateParameters
     */
    projectId?: string;
    /**
     * List of platforms the distribution should support. Valid values are: * `android` * `ios` * `flutter` * `i18next` * `rails`
     * @type {Array<string>}
     * @memberof DistributionCreateParameters
     */
    platforms?: Array<string>;
    /**
     * List of locale ids that will be part of distribution releases
     * @type {Array<string>}
     * @memberof DistributionCreateParameters
     */
    localeIds?: Array<string>;
    /**
     * Additional formatting and render options. Only <code>enclose_in_cdata</code> is available for platform <code>android</code>.
     * @type {{ [key: string]: string; }}
     * @memberof DistributionCreateParameters
     */
    formatOptions?: { [key: string]: string; };
    /**
     * Use fallback locale if there is no translation in the current locale.
     * @type {boolean}
     * @memberof DistributionCreateParameters
     */
    fallbackLocalesEnabled?: boolean;
    /**
     * Indicates whether to fallback to non regional locale when locale can not be found
     * @type {boolean}
     * @memberof DistributionCreateParameters
     */
    fallbackToNonRegionalLocale?: boolean;
    /**
     * Indicates whether to fallback to projects default locale when locale can not be found
     * @type {boolean}
     * @memberof DistributionCreateParameters
     */
    fallbackToDefaultLocale?: boolean;
    /**
     * Use last reviewed instead of latest translation in a project
     * @type {boolean}
     * @memberof DistributionCreateParameters
     */
    useLastReviewedVersion?: boolean;
}

export function DistributionCreateParametersFromJSON(json: any): DistributionCreateParameters {
    return DistributionCreateParametersFromJSONTyped(json, false);
}

export function DistributionCreateParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): DistributionCreateParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'projectId': !exists(json, 'project_id') ? undefined : json['project_id'],
        'platforms': !exists(json, 'platforms') ? undefined : json['platforms'],
        'localeIds': !exists(json, 'locale_ids') ? undefined : json['locale_ids'],
        'formatOptions': !exists(json, 'format_options') ? undefined : json['format_options'],
        'fallbackLocalesEnabled': !exists(json, 'fallback_locales_enabled') ? undefined : json['fallback_locales_enabled'],
        'fallbackToNonRegionalLocale': !exists(json, 'fallback_to_non_regional_locale') ? undefined : json['fallback_to_non_regional_locale'],
        'fallbackToDefaultLocale': !exists(json, 'fallback_to_default_locale') ? undefined : json['fallback_to_default_locale'],
        'useLastReviewedVersion': !exists(json, 'use_last_reviewed_version') ? undefined : json['use_last_reviewed_version'],
    };
}

export function DistributionCreateParametersToJSON(value?: DistributionCreateParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'project_id': value.projectId,
        'platforms': value.platforms,
        'locale_ids': value.localeIds,
        'format_options': value.formatOptions,
        'fallback_locales_enabled': value.fallbackLocalesEnabled,
        'fallback_to_non_regional_locale': value.fallbackToNonRegionalLocale,
        'fallback_to_default_locale': value.fallbackToDefaultLocale,
        'use_last_reviewed_version': value.useLastReviewedVersion,
    };
}


