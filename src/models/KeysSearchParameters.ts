/* tslint:disable */
/* eslint-disable */
/**
 * Phrase API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface KeysSearchParameters
 */
export interface KeysSearchParameters {
    /**
     * specify the branch to use
     * @type {string}
     * @memberof KeysSearchParameters
     */
    branch?: string;
    /**
     * Sort by field. Can be one of: name, created_at, updated_at.
     * @type {string}
     * @memberof KeysSearchParameters
     */
    sort?: string;
    /**
     * Order direction. Can be one of: asc, desc.
     * @type {string}
     * @memberof KeysSearchParameters
     */
    order?: string;
    /**
     * q_description_placeholder
     * @type {string}
     * @memberof KeysSearchParameters
     */
    q?: string;
    /**
     * Locale used to determine the translation state of a key when filtering for untranslated or translated keys.
     * @type {string}
     * @memberof KeysSearchParameters
     */
    localeId?: string;
}

export function KeysSearchParametersFromJSON(json: any): KeysSearchParameters {
    return KeysSearchParametersFromJSONTyped(json, false);
}

export function KeysSearchParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): KeysSearchParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'branch': !exists(json, 'branch') ? undefined : json['branch'],
        'sort': !exists(json, 'sort') ? undefined : json['sort'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'q': !exists(json, 'q') ? undefined : json['q'],
        'localeId': !exists(json, 'locale_id') ? undefined : json['locale_id'],
    };
}

export function KeysSearchParametersToJSON(value?: KeysSearchParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'branch': value.branch,
        'sort': value.sort,
        'order': value.order,
        'q': value.q,
        'locale_id': value.localeId,
    };
}


