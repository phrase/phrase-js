/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Format
 */
export interface Format {
    /**
     * 
     * @type {string}
     * @memberof Format
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Format
     */
    apiName?: string;
    /**
     * 
     * @type {string}
     * @memberof Format
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof Format
     */
    extension?: string;
    /**
     * 
     * @type {string}
     * @memberof Format
     */
    defaultEncoding?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Format
     */
    importable?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Format
     */
    exportable?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Format
     */
    defaultFile?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Format
     */
    rendersDefaultLocale?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof Format
     */
    includesLocaleInformation?: boolean;
}

export function FormatFromJSON(json: any): Format {
    return FormatFromJSONTyped(json, false);
}

export function FormatFromJSONTyped(json: any, ignoreDiscriminator: boolean): Format {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'apiName': !exists(json, 'api_name') ? undefined : json['api_name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'extension': !exists(json, 'extension') ? undefined : json['extension'],
        'defaultEncoding': !exists(json, 'default_encoding') ? undefined : json['default_encoding'],
        'importable': !exists(json, 'importable') ? undefined : json['importable'],
        'exportable': !exists(json, 'exportable') ? undefined : json['exportable'],
        'defaultFile': !exists(json, 'default_file') ? undefined : json['default_file'],
        'rendersDefaultLocale': !exists(json, 'renders_default_locale') ? undefined : json['renders_default_locale'],
        'includesLocaleInformation': !exists(json, 'includes_locale_information') ? undefined : json['includes_locale_information'],
    };
}

export function FormatToJSON(value?: Format | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'api_name': value.apiName,
        'description': value.description,
        'extension': value.extension,
        'default_encoding': value.defaultEncoding,
        'importable': value.importable,
        'exportable': value.exportable,
        'default_file': value.defaultFile,
        'renders_default_locale': value.rendersDefaultLocale,
        'includes_locale_information': value.includesLocaleInformation,
    };
}


