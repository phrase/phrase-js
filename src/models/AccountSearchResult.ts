/* tslint:disable */
/* eslint-disable */
/**
 * Phrase API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    KeyPreview,
    KeyPreviewFromJSON,
    KeyPreviewFromJSONTyped,
    KeyPreviewToJSON,
    LocalePreview,
    LocalePreviewFromJSON,
    LocalePreviewFromJSONTyped,
    LocalePreviewToJSON,
    Project,
    ProjectFromJSON,
    ProjectFromJSONTyped,
    ProjectToJSON,
    Translation,
    TranslationFromJSON,
    TranslationFromJSONTyped,
    TranslationToJSON,
} from './';

/**
 * 
 * @export
 * @interface AccountSearchResult
 */
export interface AccountSearchResult {
    /**
     * 
     * @type {string}
     * @memberof AccountSearchResult
     */
    query?: string;
    /**
     * 
     * @type {string}
     * @memberof AccountSearchResult
     */
    excerpt?: string;
    /**
     * 
     * @type {KeyPreview}
     * @memberof AccountSearchResult
     */
    key?: KeyPreview;
    /**
     * 
     * @type {LocalePreview}
     * @memberof AccountSearchResult
     */
    locale?: LocalePreview;
    /**
     * 
     * @type {Project}
     * @memberof AccountSearchResult
     */
    project?: Project;
    /**
     * 
     * @type {Translation}
     * @memberof AccountSearchResult
     */
    translation?: Translation;
    /**
     * 
     * @type {Array<Translation>}
     * @memberof AccountSearchResult
     */
    otherTranslations?: Array<Translation>;
}

export function AccountSearchResultFromJSON(json: any): AccountSearchResult {
    return AccountSearchResultFromJSONTyped(json, false);
}

export function AccountSearchResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccountSearchResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'query': !exists(json, 'query') ? undefined : json['query'],
        'excerpt': !exists(json, 'excerpt') ? undefined : json['excerpt'],
        'key': !exists(json, 'key') ? undefined : KeyPreviewFromJSON(json['key']),
        'locale': !exists(json, 'locale') ? undefined : LocalePreviewFromJSON(json['locale']),
        'project': !exists(json, 'project') ? undefined : ProjectFromJSON(json['project']),
        'translation': !exists(json, 'translation') ? undefined : TranslationFromJSON(json['translation']),
        'otherTranslations': !exists(json, 'other_translations') ? undefined : ((json['other_translations'] as Array<any>).map(TranslationFromJSON)),
    };
}

export function AccountSearchResultToJSON(value?: AccountSearchResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'query': value.query,
        'excerpt': value.excerpt,
        'key': KeyPreviewToJSON(value.key),
        'locale': LocalePreviewToJSON(value.locale),
        'project': ProjectToJSON(value.project),
        'translation': TranslationToJSON(value.translation),
        'other_translations': value.otherTranslations === undefined ? undefined : ((value.otherTranslations as Array<any>).map(TranslationToJSON)),
    };
}


