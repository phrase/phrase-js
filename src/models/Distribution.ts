/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    LocalePreview,
    LocalePreviewFromJSON,
    LocalePreviewFromJSONTyped,
    LocalePreviewToJSON,
    ProjectShort,
    ProjectShortFromJSON,
    ProjectShortFromJSONTyped,
    ProjectShortToJSON,
    ReleasePreview,
    ReleasePreviewFromJSON,
    ReleasePreviewFromJSONTyped,
    ReleasePreviewToJSON,
} from './';

/**
 * 
 * @export
 * @interface Distribution
 */
export interface Distribution {
    /**
     * 
     * @type {string}
     * @memberof Distribution
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Distribution
     */
    name?: string;
    /**
     * 
     * @type {ProjectShort}
     * @memberof Distribution
     */
    project?: ProjectShort;
    /**
     * 
     * @type {Array<string>}
     * @memberof Distribution
     */
    platforms?: Array<string>;
    /**
     * 
     * @type {Array<LocalePreview>}
     * @memberof Distribution
     */
    locales?: Array<LocalePreview>;
    /**
     * 
     * @type {Array<ReleasePreview>}
     * @memberof Distribution
     */
    releases?: Array<ReleasePreview>;
    /**
     * 
     * @type {Date}
     * @memberof Distribution
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Distribution
     */
    deletedAt?: Date;
}

export function DistributionFromJSON(json: any): Distribution {
    return DistributionFromJSONTyped(json, false);
}

export function DistributionFromJSONTyped(json: any, ignoreDiscriminator: boolean): Distribution {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'project': !exists(json, 'project') ? undefined : ProjectShortFromJSON(json['project']),
        'platforms': !exists(json, 'platforms') ? undefined : json['platforms'],
        'locales': !exists(json, 'locales') ? undefined : ((json['locales'] as Array<any>).map(LocalePreviewFromJSON)),
        'releases': !exists(json, 'releases') ? undefined : ((json['releases'] as Array<any>).map(ReleasePreviewFromJSON)),
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'deletedAt': !exists(json, 'deleted_at') ? undefined : (new Date(json['deleted_at'])),
    };
}

export function DistributionToJSON(value?: Distribution | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'project': ProjectShortToJSON(value.project),
        'platforms': value.platforms,
        'locales': value.locales === undefined ? undefined : ((value.locales as Array<any>).map(LocalePreviewToJSON)),
        'releases': value.releases === undefined ? undefined : ((value.releases as Array<any>).map(ReleasePreviewToJSON)),
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'deleted_at': value.deletedAt === undefined ? undefined : (value.deletedAt.toISOString()),
    };
}


