/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UploadSummary,
    UploadSummaryFromJSON,
    UploadSummaryFromJSONTyped,
    UploadSummaryToJSON,
} from './';

/**
 * 
 * @export
 * @interface Upload
 */
export interface Upload {
    /**
     * 
     * @type {string}
     * @memberof Upload
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Upload
     */
    filename?: string;
    /**
     * 
     * @type {string}
     * @memberof Upload
     */
    format?: string;
    /**
     * 
     * @type {string}
     * @memberof Upload
     */
    state?: string;
    /**
     * 
     * @type {string}
     * @memberof Upload
     */
    tag?: string;
    /**
     * 
     * @type {UploadSummary}
     * @memberof Upload
     */
    summary?: UploadSummary;
    /**
     * 
     * @type {Date}
     * @memberof Upload
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Upload
     */
    updatedAt?: Date;
}

export function UploadFromJSON(json: any): Upload {
    return UploadFromJSONTyped(json, false);
}

export function UploadFromJSONTyped(json: any, ignoreDiscriminator: boolean): Upload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'filename': !exists(json, 'filename') ? undefined : json['filename'],
        'format': !exists(json, 'format') ? undefined : json['format'],
        'state': !exists(json, 'state') ? undefined : json['state'],
        'tag': !exists(json, 'tag') ? undefined : json['tag'],
        'summary': !exists(json, 'summary') ? undefined : UploadSummaryFromJSON(json['summary']),
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}

export function UploadToJSON(value?: Upload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'filename': value.filename,
        'format': value.format,
        'state': value.state,
        'tag': value.tag,
        'summary': UploadSummaryToJSON(value.summary),
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}


