/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserPreview,
    UserPreviewFromJSON,
    UserPreviewFromJSONTyped,
    UserPreviewToJSON,
} from './';

/**
 * 
 * @export
 * @interface Branch
 */
export interface Branch {
    /**
     * 
     * @type {string}
     * @memberof Branch
     */
    baseProjectId?: string;
    /**
     * 
     * @type {string}
     * @memberof Branch
     */
    branchProjectId?: string;
    /**
     * 
     * @type {string}
     * @memberof Branch
     */
    name?: string;
    /**
     * 
     * @type {Date}
     * @memberof Branch
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Branch
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Branch
     */
    mergedAt?: Date;
    /**
     * 
     * @type {UserPreview}
     * @memberof Branch
     */
    mergedBy?: UserPreview;
    /**
     * 
     * @type {UserPreview}
     * @memberof Branch
     */
    createdBy?: UserPreview;
    /**
     * 
     * @type {string}
     * @memberof Branch
     */
    state?: string;
}

export function BranchFromJSON(json: any): Branch {
    return BranchFromJSONTyped(json, false);
}

export function BranchFromJSONTyped(json: any, ignoreDiscriminator: boolean): Branch {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'baseProjectId': !exists(json, 'base_project_id') ? undefined : json['base_project_id'],
        'branchProjectId': !exists(json, 'branch_project_id') ? undefined : json['branch_project_id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'mergedAt': !exists(json, 'merged_at') ? undefined : (new Date(json['merged_at'])),
        'mergedBy': !exists(json, 'merged_by') ? undefined : UserPreviewFromJSON(json['merged_by']),
        'createdBy': !exists(json, 'created_by') ? undefined : UserPreviewFromJSON(json['created_by']),
        'state': !exists(json, 'state') ? undefined : json['state'],
    };
}

export function BranchToJSON(value?: Branch | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'base_project_id': value.baseProjectId,
        'branch_project_id': value.branchProjectId,
        'name': value.name,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'merged_at': value.mergedAt === undefined ? undefined : (value.mergedAt.toISOString()),
        'merged_by': UserPreviewToJSON(value.mergedBy),
        'created_by': UserPreviewToJSON(value.createdBy),
        'state': value.state,
    };
}


