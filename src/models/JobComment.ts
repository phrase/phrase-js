/* tslint:disable */
/* eslint-disable */
/**
 * Phrase API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserPreview,
    UserPreviewFromJSON,
    UserPreviewFromJSONTyped,
    UserPreviewToJSON,
} from './';

/**
 * 
 * @export
 * @interface JobComment
 */
export interface JobComment {
    /**
     * 
     * @type {string}
     * @memberof JobComment
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof JobComment
     */
    message?: string;
    /**
     * 
     * @type {string}
     * @memberof JobComment
     */
    jobId?: string;
    /**
     * 
     * @type {UserPreview}
     * @memberof JobComment
     */
    user?: UserPreview;
    /**
     * 
     * @type {Date}
     * @memberof JobComment
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof JobComment
     */
    updatedAt?: Date;
    /**
     * 
     * @type {Array<UserPreview>}
     * @memberof JobComment
     */
    mentionedUsers?: Array<UserPreview>;
}

export function JobCommentFromJSON(json: any): JobComment {
    return JobCommentFromJSONTyped(json, false);
}

export function JobCommentFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobComment {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'jobId': !exists(json, 'job_id') ? undefined : json['job_id'],
        'user': !exists(json, 'user') ? undefined : UserPreviewFromJSON(json['user']),
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'mentionedUsers': !exists(json, 'mentioned_users') ? undefined : ((json['mentioned_users'] as Array<any>).map(UserPreviewFromJSON)),
    };
}

export function JobCommentToJSON(value?: JobComment | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'message': value.message,
        'job_id': value.jobId,
        'user': UserPreviewToJSON(value.user),
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'mentioned_users': value.mentionedUsers === undefined ? undefined : ((value.mentionedUsers as Array<any>).map(UserPreviewToJSON)),
    };
}


