/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TranslationsUnverifyParameters
 */
export interface TranslationsUnverifyParameters {
    /**
     * specify the branch to use
     * @type {string}
     * @memberof TranslationsUnverifyParameters
     */
    branch?: string;
    /**
     * Specify a query to find translations by content (including wildcards).  *Note: Search is limited to 10000 results and may not include recently updated data (depending on the project size).*  The following qualifiers are supported in the query: * `id:translation_id,...` for queries on a comma-separated list of ids * `tags:XYZ` for tags on the translation * `unverified:{true|false}` for verification status * `excluded:{true|false}` for exclusion status * `updated_at:{>=|<=}2013-02-21T00:00:00Z` for date range queries  Find more examples [here](/en/api/strings/usage-examples). 
     * @type {string}
     * @memberof TranslationsUnverifyParameters
     */
    q?: string;
    /**
     * Sort criteria. Can be one of: key_name, created_at, updated_at.
     * @type {string}
     * @memberof TranslationsUnverifyParameters
     */
    sort?: string;
    /**
     * Order direction. Can be one of: asc, desc.
     * @type {string}
     * @memberof TranslationsUnverifyParameters
     */
    order?: string;
}

export function TranslationsUnverifyParametersFromJSON(json: any): TranslationsUnverifyParameters {
    return TranslationsUnverifyParametersFromJSONTyped(json, false);
}

export function TranslationsUnverifyParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslationsUnverifyParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'branch': !exists(json, 'branch') ? undefined : json['branch'],
        'q': !exists(json, 'q') ? undefined : json['q'],
        'sort': !exists(json, 'sort') ? undefined : json['sort'],
        'order': !exists(json, 'order') ? undefined : json['order'],
    };
}

export function TranslationsUnverifyParametersToJSON(value?: TranslationsUnverifyParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'branch': value.branch,
        'q': value.q,
        'sort': value.sort,
        'order': value.order,
    };
}


