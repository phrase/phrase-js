/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProjectShort,
    ProjectShortFromJSON,
    ProjectShortFromJSONTyped,
    ProjectShortToJSON,
} from './';

/**
 * 
 * @export
 * @interface BitbucketSync
 */
export interface BitbucketSync {
    /**
     * 
     * @type {string}
     * @memberof BitbucketSync
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof BitbucketSync
     */
    repositoryName?: string;
    /**
     * 
     * @type {Date}
     * @memberof BitbucketSync
     */
    lastExportToBitbucketAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof BitbucketSync
     */
    lastImportFromBitbucketAt?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof BitbucketSync
     */
    validPhraseappYaml?: boolean;
    /**
     * 
     * @type {Array<ProjectShort>}
     * @memberof BitbucketSync
     */
    phraseappProjects?: Array<ProjectShort>;
}

export function BitbucketSyncFromJSON(json: any): BitbucketSync {
    return BitbucketSyncFromJSONTyped(json, false);
}

export function BitbucketSyncFromJSONTyped(json: any, ignoreDiscriminator: boolean): BitbucketSync {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'repositoryName': !exists(json, 'repository_name') ? undefined : json['repository_name'],
        'lastExportToBitbucketAt': !exists(json, 'last_export_to_bitbucket_at') ? undefined : (new Date(json['last_export_to_bitbucket_at'])),
        'lastImportFromBitbucketAt': !exists(json, 'last_import_from_bitbucket_at') ? undefined : (new Date(json['last_import_from_bitbucket_at'])),
        'validPhraseappYaml': !exists(json, 'valid_phraseapp_yaml') ? undefined : json['valid_phraseapp_yaml'],
        'phraseappProjects': !exists(json, 'phraseapp_projects') ? undefined : ((json['phraseapp_projects'] as Array<any>).map(ProjectShortFromJSON)),
    };
}

export function BitbucketSyncToJSON(value?: BitbucketSync | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'repository_name': value.repositoryName,
        'last_export_to_bitbucket_at': value.lastExportToBitbucketAt === undefined ? undefined : (value.lastExportToBitbucketAt.toISOString()),
        'last_import_from_bitbucket_at': value.lastImportFromBitbucketAt === undefined ? undefined : (value.lastImportFromBitbucketAt.toISOString()),
        'valid_phraseapp_yaml': value.validPhraseappYaml,
        'phraseapp_projects': value.phraseappProjects === undefined ? undefined : ((value.phraseappProjects as Array<any>).map(ProjectShortToJSON)),
    };
}


