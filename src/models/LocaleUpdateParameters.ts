/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LocaleUpdateParameters
 */
export interface LocaleUpdateParameters {
    /**
     * specify the branch to use
     * @type {string}
     * @memberof LocaleUpdateParameters
     */
    branch?: string;
    /**
     * Locale name
     * @type {string}
     * @memberof LocaleUpdateParameters
     */
    name?: string;
    /**
     * Locale ISO code
     * @type {string}
     * @memberof LocaleUpdateParameters
     */
    code?: string;
    /**
     * Indicates whether locale is the default locale. If set to true, the previous default locale the project is no longer the default locale.
     * @type {boolean}
     * @memberof LocaleUpdateParameters
     */
    _default?: boolean;
    /**
     * Indicates whether locale is a main locale. Main locales are part of the <a href=\"https://support.phrase.com/hc/en-us/articles/5784094755484\" target=\"_blank\">Verification System</a> feature.
     * @type {boolean}
     * @memberof LocaleUpdateParameters
     */
    main?: boolean;
    /**
     * Indicates whether locale is a RTL (Right-to-Left) locale.
     * @type {boolean}
     * @memberof LocaleUpdateParameters
     */
    rtl?: boolean;
    /**
     * Source locale. Can be the name or public id of the locale. Preferred is the public id.
     * @type {string}
     * @memberof LocaleUpdateParameters
     */
    sourceLocaleId?: string;
    /**
     * Fallback locale for empty translations. Can be a locale name or id.
     * @type {string}
     * @memberof LocaleUpdateParameters
     */
    fallbackLocaleId?: string;
    /**
     * Indicates that new translations for this locale should be marked as unverified. Part of the <a href=\"https://support.phrase.com/hc/en-us/articles/5784094755484\" target=\"_blank\">Advanced Workflows</a> feature.
     * @type {boolean}
     * @memberof LocaleUpdateParameters
     */
    unverifyNewTranslations?: boolean;
    /**
     * Indicates that updated translations for this locale should be marked as unverified. Part of the <a href=\"https://support.phrase.com/hc/en-us/articles/5784094755484\" target=\"_blank\">Advanced Workflows</a> feature.
     * @type {boolean}
     * @memberof LocaleUpdateParameters
     */
    unverifyUpdatedTranslations?: boolean;
    /**
     * If set, translations for this locale will be fetched automatically, right after creation.
     * @type {boolean}
     * @memberof LocaleUpdateParameters
     */
    autotranslate?: boolean;
}

export function LocaleUpdateParametersFromJSON(json: any): LocaleUpdateParameters {
    return LocaleUpdateParametersFromJSONTyped(json, false);
}

export function LocaleUpdateParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocaleUpdateParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'branch': !exists(json, 'branch') ? undefined : json['branch'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        '_default': !exists(json, 'default') ? undefined : json['default'],
        'main': !exists(json, 'main') ? undefined : json['main'],
        'rtl': !exists(json, 'rtl') ? undefined : json['rtl'],
        'sourceLocaleId': !exists(json, 'source_locale_id') ? undefined : json['source_locale_id'],
        'fallbackLocaleId': !exists(json, 'fallback_locale_id') ? undefined : json['fallback_locale_id'],
        'unverifyNewTranslations': !exists(json, 'unverify_new_translations') ? undefined : json['unverify_new_translations'],
        'unverifyUpdatedTranslations': !exists(json, 'unverify_updated_translations') ? undefined : json['unverify_updated_translations'],
        'autotranslate': !exists(json, 'autotranslate') ? undefined : json['autotranslate'],
    };
}

export function LocaleUpdateParametersToJSON(value?: LocaleUpdateParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'branch': value.branch,
        'name': value.name,
        'code': value.code,
        'default': value._default,
        'main': value.main,
        'rtl': value.rtl,
        'source_locale_id': value.sourceLocaleId,
        'fallback_locale_id': value.fallbackLocaleId,
        'unverify_new_translations': value.unverifyNewTranslations,
        'unverify_updated_translations': value.unverifyUpdatedTranslations,
        'autotranslate': value.autotranslate,
    };
}


