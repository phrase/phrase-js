/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RepoSyncEventErrorsInner,
    RepoSyncEventErrorsInnerFromJSON,
    RepoSyncEventErrorsInnerFromJSONTyped,
    RepoSyncEventErrorsInnerToJSON,
} from './';

/**
 * 
 * @export
 * @interface RepoSyncEvent
 */
export interface RepoSyncEvent {
    /**
     * 
     * @type {string}
     * @memberof RepoSyncEvent
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof RepoSyncEvent
     */
    type?: RepoSyncEventTypeEnum;
    /**
     * 
     * @type {Date}
     * @memberof RepoSyncEvent
     */
    createdAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof RepoSyncEvent
     */
    status?: RepoSyncEventStatusEnum;
    /**
     * URL of the pull request created on export
     * @type {string}
     * @memberof RepoSyncEvent
     */
    pullRequestUrl?: string;
    /**
     * Whether the import was triggered by the repo push event
     * @type {boolean}
     * @memberof RepoSyncEvent
     */
    autoImport?: boolean;
    /**
     * List of error messages, in case of failure
     * @type {Array<RepoSyncEventErrorsInner>}
     * @memberof RepoSyncEvent
     */
    errors?: Array<RepoSyncEventErrorsInner>;
}

export function RepoSyncEventFromJSON(json: any): RepoSyncEvent {
    return RepoSyncEventFromJSONTyped(json, false);
}

export function RepoSyncEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): RepoSyncEvent {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'status': !exists(json, 'status') ? undefined : json['status'],
        'pullRequestUrl': !exists(json, 'pull_request_url') ? undefined : json['pull_request_url'],
        'autoImport': !exists(json, 'auto_import') ? undefined : json['auto_import'],
        'errors': !exists(json, 'errors') ? undefined : ((json['errors'] as Array<any>).map(RepoSyncEventErrorsInnerFromJSON)),
    };
}

export function RepoSyncEventToJSON(value?: RepoSyncEvent | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'type': value.type,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'status': value.status,
        'pull_request_url': value.pullRequestUrl,
        'auto_import': value.autoImport,
        'errors': value.errors === undefined ? undefined : ((value.errors as Array<any>).map(RepoSyncEventErrorsInnerToJSON)),
    };
}

/**
* @export
* @enum {string}
*/
export enum RepoSyncEventTypeEnum {
    Import = 'import',
    Export = 'export'
}
/**
* @export
* @enum {string}
*/
export enum RepoSyncEventStatusEnum {
    Running = 'running',
    Success = 'success',
    Failure = 'failure'
}


