/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TranslationKey
 */
export interface TranslationKey {
    /**
     * 
     * @type {string}
     * @memberof TranslationKey
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TranslationKey
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TranslationKey
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof TranslationKey
     */
    nameHash?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TranslationKey
     */
    plural?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof TranslationKey
     */
    tags?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof TranslationKey
     */
    dataType?: string;
    /**
     * 
     * @type {Date}
     * @memberof TranslationKey
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TranslationKey
     */
    updatedAt?: Date;
}

export function TranslationKeyFromJSON(json: any): TranslationKey {
    return TranslationKeyFromJSONTyped(json, false);
}

export function TranslationKeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslationKey {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'nameHash': !exists(json, 'name_hash') ? undefined : json['name_hash'],
        'plural': !exists(json, 'plural') ? undefined : json['plural'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'dataType': !exists(json, 'data_type') ? undefined : json['data_type'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}

export function TranslationKeyToJSON(value?: TranslationKey | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'name_hash': value.nameHash,
        'plural': value.plural,
        'tags': value.tags,
        'data_type': value.dataType,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}


