/* tslint:disable */
/* eslint-disable */
/**
 * Phrase API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StyleguideDetails1
 */
export interface StyleguideDetails1 {
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    publicUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    audience?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    targetAudience?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    grammaticalPerson?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    vocabularyType?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    business?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    companyBranding?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    formatting?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    glossaryTerms?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    grammarConsistency?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    literalTranslation?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    overallTone?: string;
    /**
     * 
     * @type {string}
     * @memberof StyleguideDetails1
     */
    samples?: string;
}

export function StyleguideDetails1FromJSON(json: any): StyleguideDetails1 {
    return StyleguideDetails1FromJSONTyped(json, false);
}

export function StyleguideDetails1FromJSONTyped(json: any, ignoreDiscriminator: boolean): StyleguideDetails1 {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'publicUrl': !exists(json, 'public_url') ? undefined : json['public_url'],
        'audience': !exists(json, 'audience') ? undefined : json['audience'],
        'targetAudience': !exists(json, 'target_audience') ? undefined : json['target_audience'],
        'grammaticalPerson': !exists(json, 'grammatical_person') ? undefined : json['grammatical_person'],
        'vocabularyType': !exists(json, 'vocabulary_type') ? undefined : json['vocabulary_type'],
        'business': !exists(json, 'business') ? undefined : json['business'],
        'companyBranding': !exists(json, 'company_branding') ? undefined : json['company_branding'],
        'formatting': !exists(json, 'formatting') ? undefined : json['formatting'],
        'glossaryTerms': !exists(json, 'glossary_terms') ? undefined : json['glossary_terms'],
        'grammarConsistency': !exists(json, 'grammar_consistency') ? undefined : json['grammar_consistency'],
        'literalTranslation': !exists(json, 'literal_translation') ? undefined : json['literal_translation'],
        'overallTone': !exists(json, 'overall_tone') ? undefined : json['overall_tone'],
        'samples': !exists(json, 'samples') ? undefined : json['samples'],
    };
}

export function StyleguideDetails1ToJSON(value?: StyleguideDetails1 | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'public_url': value.publicUrl,
        'audience': value.audience,
        'target_audience': value.targetAudience,
        'grammatical_person': value.grammaticalPerson,
        'vocabulary_type': value.vocabularyType,
        'business': value.business,
        'company_branding': value.companyBranding,
        'formatting': value.formatting,
        'glossary_terms': value.glossaryTerms,
        'grammar_consistency': value.grammarConsistency,
        'literal_translation': value.literalTranslation,
        'overall_tone': value.overallTone,
        'samples': value.samples,
    };
}


