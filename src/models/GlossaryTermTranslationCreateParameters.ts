/* tslint:disable */
/* eslint-disable */
/**
 * Phrase API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GlossaryTermTranslationCreateParameters
 */
export interface GlossaryTermTranslationCreateParameters {
    /**
     * Identifies the language for this translation
     * @type {string}
     * @memberof GlossaryTermTranslationCreateParameters
     */
    localeCode?: string;
    /**
     * The content of the translation
     * @type {string}
     * @memberof GlossaryTermTranslationCreateParameters
     */
    content?: string;
}

export function GlossaryTermTranslationCreateParametersFromJSON(json: any): GlossaryTermTranslationCreateParameters {
    return GlossaryTermTranslationCreateParametersFromJSONTyped(json, false);
}

export function GlossaryTermTranslationCreateParametersFromJSONTyped(json: any, ignoreDiscriminator: boolean): GlossaryTermTranslationCreateParameters {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'localeCode': !exists(json, 'locale_code') ? undefined : json['locale_code'],
        'content': !exists(json, 'content') ? undefined : json['content'],
    };
}

export function GlossaryTermTranslationCreateParametersToJSON(value?: GlossaryTermTranslationCreateParameters | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'locale_code': value.localeCode,
        'content': value.content,
    };
}


