/* tslint:disable */
/* eslint-disable */
/**
 * Phrase API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LocaleStatistics
 */
export interface LocaleStatistics {
    /**
     * 
     * @type {number}
     * @memberof LocaleStatistics
     */
    keysTotalCount?: number;
    /**
     * 
     * @type {number}
     * @memberof LocaleStatistics
     */
    keysUntranslatedCount?: number;
    /**
     * 
     * @type {number}
     * @memberof LocaleStatistics
     */
    wordsTotalCount?: number;
    /**
     * 
     * @type {number}
     * @memberof LocaleStatistics
     */
    translationsCompletedCount?: number;
    /**
     * 
     * @type {number}
     * @memberof LocaleStatistics
     */
    translationsUnverifiedCount?: number;
    /**
     * 
     * @type {number}
     * @memberof LocaleStatistics
     */
    unverifiedWordsCount?: number;
    /**
     * 
     * @type {number}
     * @memberof LocaleStatistics
     */
    missingWordsCount?: number;
}

export function LocaleStatisticsFromJSON(json: any): LocaleStatistics {
    return LocaleStatisticsFromJSONTyped(json, false);
}

export function LocaleStatisticsFromJSONTyped(json: any, ignoreDiscriminator: boolean): LocaleStatistics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'keysTotalCount': !exists(json, 'keys_total_count') ? undefined : json['keys_total_count'],
        'keysUntranslatedCount': !exists(json, 'keys_untranslated_count') ? undefined : json['keys_untranslated_count'],
        'wordsTotalCount': !exists(json, 'words_total_count') ? undefined : json['words_total_count'],
        'translationsCompletedCount': !exists(json, 'translations_completed_count') ? undefined : json['translations_completed_count'],
        'translationsUnverifiedCount': !exists(json, 'translations_unverified_count') ? undefined : json['translations_unverified_count'],
        'unverifiedWordsCount': !exists(json, 'unverified_words_count') ? undefined : json['unverified_words_count'],
        'missingWordsCount': !exists(json, 'missing_words_count') ? undefined : json['missing_words_count'],
    };
}

export function LocaleStatisticsToJSON(value?: LocaleStatistics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'keys_total_count': value.keysTotalCount,
        'keys_untranslated_count': value.keysUntranslatedCount,
        'words_total_count': value.wordsTotalCount,
        'translations_completed_count': value.translationsCompletedCount,
        'translations_unverified_count': value.translationsUnverifiedCount,
        'unverified_words_count': value.unverifiedWordsCount,
        'missing_words_count': value.missingWordsCount,
    };
}


