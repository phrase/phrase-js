/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    UserPreview,
    UserPreviewFromJSON,
    UserPreviewFromJSONTyped,
    UserPreviewToJSON,
} from './';

/**
 * 
 * @export
 * @interface TranslationKeyDetails
 */
export interface TranslationKeyDetails {
    /**
     * 
     * @type {string}
     * @memberof TranslationKeyDetails
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof TranslationKeyDetails
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof TranslationKeyDetails
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof TranslationKeyDetails
     */
    nameHash?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TranslationKeyDetails
     */
    plural?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof TranslationKeyDetails
     */
    tags?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof TranslationKeyDetails
     */
    dataType?: string;
    /**
     * 
     * @type {Date}
     * @memberof TranslationKeyDetails
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof TranslationKeyDetails
     */
    updatedAt?: Date;
    /**
     * 
     * @type {string}
     * @memberof TranslationKeyDetails
     */
    namePlural?: string;
    /**
     * 
     * @type {number}
     * @memberof TranslationKeyDetails
     */
    commentsCount?: number;
    /**
     * 
     * @type {number}
     * @memberof TranslationKeyDetails
     */
    maxCharactersAllowed?: number;
    /**
     * 
     * @type {string}
     * @memberof TranslationKeyDetails
     */
    screenshotUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof TranslationKeyDetails
     */
    unformatted?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof TranslationKeyDetails
     */
    xmlSpacePreserve?: boolean;
    /**
     * 
     * @type {string}
     * @memberof TranslationKeyDetails
     */
    originalFile?: string;
    /**
     * 
     * @type {string}
     * @memberof TranslationKeyDetails
     */
    formatValueType?: string;
    /**
     * 
     * @type {UserPreview}
     * @memberof TranslationKeyDetails
     */
    creator?: UserPreview;
}

export function TranslationKeyDetailsFromJSON(json: any): TranslationKeyDetails {
    return TranslationKeyDetailsFromJSONTyped(json, false);
}

export function TranslationKeyDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): TranslationKeyDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'nameHash': !exists(json, 'name_hash') ? undefined : json['name_hash'],
        'plural': !exists(json, 'plural') ? undefined : json['plural'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
        'dataType': !exists(json, 'data_type') ? undefined : json['data_type'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'namePlural': !exists(json, 'name_plural') ? undefined : json['name_plural'],
        'commentsCount': !exists(json, 'comments_count') ? undefined : json['comments_count'],
        'maxCharactersAllowed': !exists(json, 'max_characters_allowed') ? undefined : json['max_characters_allowed'],
        'screenshotUrl': !exists(json, 'screenshot_url') ? undefined : json['screenshot_url'],
        'unformatted': !exists(json, 'unformatted') ? undefined : json['unformatted'],
        'xmlSpacePreserve': !exists(json, 'xml_space_preserve') ? undefined : json['xml_space_preserve'],
        'originalFile': !exists(json, 'original_file') ? undefined : json['original_file'],
        'formatValueType': !exists(json, 'format_value_type') ? undefined : json['format_value_type'],
        'creator': !exists(json, 'creator') ? undefined : UserPreviewFromJSON(json['creator']),
    };
}

export function TranslationKeyDetailsToJSON(value?: TranslationKeyDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'description': value.description,
        'name_hash': value.nameHash,
        'plural': value.plural,
        'tags': value.tags,
        'data_type': value.dataType,
        'created_at': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updated_at': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
        'name_plural': value.namePlural,
        'comments_count': value.commentsCount,
        'max_characters_allowed': value.maxCharactersAllowed,
        'screenshot_url': value.screenshotUrl,
        'unformatted': value.unformatted,
        'xml_space_preserve': value.xmlSpacePreserve,
        'original_file': value.originalFile,
        'format_value_type': value.formatValueType,
        'creator': UserPreviewToJSON(value.creator),
    };
}


