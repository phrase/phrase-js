/* tslint:disable */
/* eslint-disable */
/**
 * Phrase Strings API Reference
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: support@phrase.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    CustomMetadataPropertyCreate422Response,
    CustomMetadataPropertyCreate422ResponseFromJSON,
    CustomMetadataPropertyCreate422ResponseToJSON,
    QualityPerformanceScoreList200Response,
    QualityPerformanceScoreList200ResponseFromJSON,
    QualityPerformanceScoreList200ResponseToJSON,
    QualityPerformanceScoreListRequest,
    QualityPerformanceScoreListRequestFromJSON,
    QualityPerformanceScoreListRequestToJSON,
} from '../models';

export interface QualityPerformanceScoreListOperationRequest {
    projectId: string;
    qualityPerformanceScoreListRequest: QualityPerformanceScoreListRequest;
    xPhraseAppOTP?: string;
}

/**
 * 
 */
export class QualityPerformanceScoreApi extends runtime.BaseAPI {

    /**
     * Retrieves the quality scores for your Strings translations. Returns a score, measured by Phrase QPS
     * Get Translation Quality
     */
    async qualityPerformanceScoreListRaw(requestParameters: QualityPerformanceScoreListOperationRequest): Promise<runtime.ApiResponse<QualityPerformanceScoreList200Response>> {
        if (requestParameters.projectId === null || requestParameters.projectId === undefined) {
            throw new runtime.RequiredError('projectId','Required parameter requestParameters.projectId was null or undefined when calling qualityPerformanceScoreList.');
        }

        if (requestParameters.qualityPerformanceScoreListRequest === null || requestParameters.qualityPerformanceScoreListRequest === undefined) {
            throw new runtime.RequiredError('qualityPerformanceScoreListRequest','Required parameter requestParameters.qualityPerformanceScoreListRequest was null or undefined when calling qualityPerformanceScoreList.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (requestParameters.xPhraseAppOTP !== undefined && requestParameters.xPhraseAppOTP !== null) {
            headerParameters['X-PhraseApp-OTP'] = String(requestParameters.xPhraseAppOTP);
        }

        if (this.configuration && (this.configuration.username !== undefined || this.configuration.password !== undefined)) {
            headerParameters["Authorization"] = "Basic " + btoa(this.configuration.username + ":" + this.configuration.password);
        }
        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = this.configuration.apiKey("Authorization"); // Token authentication
        }

        const response = await this.request({
            path: `/projects/{project_id}/quality_performance_score`.replace(`{${"project_id"}}`, encodeURIComponent(String(requestParameters.projectId))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: QualityPerformanceScoreListRequestToJSON(requestParameters.qualityPerformanceScoreListRequest),
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => QualityPerformanceScoreList200ResponseFromJSON(jsonValue));
    }

    /**
     * Retrieves the quality scores for your Strings translations. Returns a score, measured by Phrase QPS
     * Get Translation Quality
     */
    async qualityPerformanceScoreList(requestParameters: QualityPerformanceScoreListOperationRequest): Promise<QualityPerformanceScoreList200Response> {
        const response = await this.qualityPerformanceScoreListRaw(requestParameters);
        return await response.value();
    }

}
